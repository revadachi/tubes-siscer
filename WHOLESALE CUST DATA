{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "894a198c",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:04.889058Z",
     "iopub.status.busy": "2024-06-04T06:56:04.888665Z",
     "iopub.status.idle": "2024-06-04T06:56:07.338773Z",
     "shell.execute_reply": "2024-06-04T06:56:07.337482Z"
    },
    "papermill": {
     "duration": 2.46442,
     "end_time": "2024-06-04T06:56:07.341424",
     "exception": false,
     "start_time": "2024-06-04T06:56:04.877004",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Import libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.colors import ListedColormap\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.metrics import precision_recall_curve\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import f1_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f86719d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.363134Z",
     "iopub.status.busy": "2024-06-04T06:56:07.362553Z",
     "iopub.status.idle": "2024-06-04T06:56:07.393209Z",
     "shell.execute_reply": "2024-06-04T06:56:07.392062Z"
    },
    "papermill": {
     "duration": 0.045026,
     "end_time": "2024-06-04T06:56:07.396291",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.351265",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "filename = \"/kaggle/input/data-wholesale-cust/Wholesale customers data.csv\"\n",
    "df = pd.read_csv(filename, encoding='unicode_escape')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a93aefb8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.417782Z",
     "iopub.status.busy": "2024-06-04T06:56:07.417342Z",
     "iopub.status.idle": "2024-06-04T06:56:07.425306Z",
     "shell.execute_reply": "2024-06-04T06:56:07.424260Z"
    },
    "papermill": {
     "duration": 0.021038,
     "end_time": "2024-06-04T06:56:07.427484",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.406446",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(440, 8)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fb9a37dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.448805Z",
     "iopub.status.busy": "2024-06-04T06:56:07.447811Z",
     "iopub.status.idle": "2024-06-04T06:56:07.470905Z",
     "shell.execute_reply": "2024-06-04T06:56:07.469774Z"
    },
    "papermill": {
     "duration": 0.03674,
     "end_time": "2024-06-04T06:56:07.473803",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.437063",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Channel</th>\n",
       "      <th>Region</th>\n",
       "      <th>Fresh</th>\n",
       "      <th>Milk</th>\n",
       "      <th>Grocery</th>\n",
       "      <th>Frozen</th>\n",
       "      <th>Detergents_Paper</th>\n",
       "      <th>Delicassen</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>12669</td>\n",
       "      <td>9656</td>\n",
       "      <td>7561</td>\n",
       "      <td>214</td>\n",
       "      <td>2674</td>\n",
       "      <td>1338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7057</td>\n",
       "      <td>9810</td>\n",
       "      <td>9568</td>\n",
       "      <td>1762</td>\n",
       "      <td>3293</td>\n",
       "      <td>1776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>6353</td>\n",
       "      <td>8808</td>\n",
       "      <td>7684</td>\n",
       "      <td>2405</td>\n",
       "      <td>3516</td>\n",
       "      <td>7844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>13265</td>\n",
       "      <td>1196</td>\n",
       "      <td>4221</td>\n",
       "      <td>6404</td>\n",
       "      <td>507</td>\n",
       "      <td>1788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>22615</td>\n",
       "      <td>5410</td>\n",
       "      <td>7198</td>\n",
       "      <td>3915</td>\n",
       "      <td>1777</td>\n",
       "      <td>5185</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Channel  Region  Fresh  Milk  Grocery  Frozen  Detergents_Paper  Delicassen\n",
       "0        2       3  12669  9656     7561     214              2674        1338\n",
       "1        2       3   7057  9810     9568    1762              3293        1776\n",
       "2        2       3   6353  8808     7684    2405              3516        7844\n",
       "3        1       3  13265  1196     4221    6404               507        1788\n",
       "4        2       3  22615  5410     7198    3915              1777        5185"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a85934ee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.496834Z",
     "iopub.status.busy": "2024-06-04T06:56:07.496412Z",
     "iopub.status.idle": "2024-06-04T06:56:07.509877Z",
     "shell.execute_reply": "2024-06-04T06:56:07.508703Z"
    },
    "papermill": {
     "duration": 0.028357,
     "end_time": "2024-06-04T06:56:07.512335",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.483978",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Channel</th>\n",
       "      <th>Region</th>\n",
       "      <th>Fresh</th>\n",
       "      <th>Milk</th>\n",
       "      <th>Grocery</th>\n",
       "      <th>Frozen</th>\n",
       "      <th>Detergents_Paper</th>\n",
       "      <th>Delicassen</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>29703</td>\n",
       "      <td>12051</td>\n",
       "      <td>16027</td>\n",
       "      <td>13135</td>\n",
       "      <td>182</td>\n",
       "      <td>2204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>436</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>39228</td>\n",
       "      <td>1431</td>\n",
       "      <td>764</td>\n",
       "      <td>4510</td>\n",
       "      <td>93</td>\n",
       "      <td>2346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>437</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>14531</td>\n",
       "      <td>15488</td>\n",
       "      <td>30243</td>\n",
       "      <td>437</td>\n",
       "      <td>14841</td>\n",
       "      <td>1867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>438</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>10290</td>\n",
       "      <td>1981</td>\n",
       "      <td>2232</td>\n",
       "      <td>1038</td>\n",
       "      <td>168</td>\n",
       "      <td>2125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>439</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2787</td>\n",
       "      <td>1698</td>\n",
       "      <td>2510</td>\n",
       "      <td>65</td>\n",
       "      <td>477</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Channel  Region  Fresh   Milk  Grocery  Frozen  Detergents_Paper  \\\n",
       "435        1       3  29703  12051    16027   13135               182   \n",
       "436        1       3  39228   1431      764    4510                93   \n",
       "437        2       3  14531  15488    30243     437             14841   \n",
       "438        1       3  10290   1981     2232    1038               168   \n",
       "439        1       3   2787   1698     2510      65               477   \n",
       "\n",
       "     Delicassen  \n",
       "435        2204  \n",
       "436        2346  \n",
       "437        1867  \n",
       "438        2125  \n",
       "439          52  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d02fe6c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.534084Z",
     "iopub.status.busy": "2024-06-04T06:56:07.533689Z",
     "iopub.status.idle": "2024-06-04T06:56:07.540780Z",
     "shell.execute_reply": "2024-06-04T06:56:07.539614Z"
    },
    "papermill": {
     "duration": 0.020887,
     "end_time": "2024-06-04T06:56:07.543285",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.522398",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Channel', 'Region', 'Fresh', 'Milk', 'Grocery', 'Frozen',\n",
       "       'Detergents_Paper', 'Delicassen'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d70b5756",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.565299Z",
     "iopub.status.busy": "2024-06-04T06:56:07.564897Z",
     "iopub.status.idle": "2024-06-04T06:56:07.573815Z",
     "shell.execute_reply": "2024-06-04T06:56:07.572499Z"
    },
    "papermill": {
     "duration": 0.022713,
     "end_time": "2024-06-04T06:56:07.576181",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.553468",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Channel             int64\n",
       "Region              int64\n",
       "Fresh               int64\n",
       "Milk                int64\n",
       "Grocery             int64\n",
       "Frozen              int64\n",
       "Detergents_Paper    int64\n",
       "Delicassen          int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d00c2db6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.598717Z",
     "iopub.status.busy": "2024-06-04T06:56:07.598270Z",
     "iopub.status.idle": "2024-06-04T06:56:07.625041Z",
     "shell.execute_reply": "2024-06-04T06:56:07.623672Z"
    },
    "papermill": {
     "duration": 0.0412,
     "end_time": "2024-06-04T06:56:07.627840",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.586640",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 440 entries, 0 to 439\n",
      "Data columns (total 8 columns):\n",
      " #   Column            Non-Null Count  Dtype\n",
      "---  ------            --------------  -----\n",
      " 0   Channel           440 non-null    int64\n",
      " 1   Region            440 non-null    int64\n",
      " 2   Fresh             440 non-null    int64\n",
      " 3   Milk              440 non-null    int64\n",
      " 4   Grocery           440 non-null    int64\n",
      " 5   Frozen            440 non-null    int64\n",
      " 6   Detergents_Paper  440 non-null    int64\n",
      " 7   Delicassen        440 non-null    int64\n",
      "dtypes: int64(8)\n",
      "memory usage: 27.6 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8ba83916",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.651295Z",
     "iopub.status.busy": "2024-06-04T06:56:07.650402Z",
     "iopub.status.idle": "2024-06-04T06:56:07.661125Z",
     "shell.execute_reply": "2024-06-04T06:56:07.659687Z"
    },
    "papermill": {
     "duration": 0.0251,
     "end_time": "2024-06-04T06:56:07.663773",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.638673",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number of duplicate rows:  (0, 8)\n"
     ]
    }
   ],
   "source": [
    "duplicate_rows_df = df[df.duplicated()]\n",
    "print(\"number of duplicate rows: \", duplicate_rows_df.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4ed79df4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.686783Z",
     "iopub.status.busy": "2024-06-04T06:56:07.686362Z",
     "iopub.status.idle": "2024-06-04T06:56:07.694924Z",
     "shell.execute_reply": "2024-06-04T06:56:07.693910Z"
    },
    "papermill": {
     "duration": 0.022458,
     "end_time": "2024-06-04T06:56:07.697081",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.674623",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Channel             440\n",
       "Region              440\n",
       "Fresh               440\n",
       "Milk                440\n",
       "Grocery             440\n",
       "Frozen              440\n",
       "Detergents_Paper    440\n",
       "Delicassen          440\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c3cbf505",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.720820Z",
     "iopub.status.busy": "2024-06-04T06:56:07.719898Z",
     "iopub.status.idle": "2024-06-04T06:56:07.728576Z",
     "shell.execute_reply": "2024-06-04T06:56:07.727372Z"
    },
    "papermill": {
     "duration": 0.022831,
     "end_time": "2024-06-04T06:56:07.730732",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.707901",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Channel             0\n",
       "Region              0\n",
       "Fresh               0\n",
       "Milk                0\n",
       "Grocery             0\n",
       "Frozen              0\n",
       "Detergents_Paper    0\n",
       "Delicassen          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check missing value in variable\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2a4c76d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.755721Z",
     "iopub.status.busy": "2024-06-04T06:56:07.755280Z",
     "iopub.status.idle": "2024-06-04T06:56:07.762055Z",
     "shell.execute_reply": "2024-06-04T06:56:07.760904Z"
    },
    "papermill": {
     "duration": 0.021611,
     "end_time": "2024-06-04T06:56:07.764411",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.742800",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.empty"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "adffef9c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:07.787580Z",
     "iopub.status.busy": "2024-06-04T06:56:07.787212Z",
     "iopub.status.idle": "2024-06-04T06:56:08.031906Z",
     "shell.execute_reply": "2024-06-04T06:56:08.030615Z"
    },
    "papermill": {
     "duration": 0.259269,
     "end_time": "2024-06-04T06:56:08.034552",
     "exception": false,
     "start_time": "2024-06-04T06:56:07.775283",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Detergents_Paper'>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x=df['Detergents_Paper'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "facc9fa7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:08.059112Z",
     "iopub.status.busy": "2024-06-04T06:56:08.058732Z",
     "iopub.status.idle": "2024-06-04T06:56:08.305137Z",
     "shell.execute_reply": "2024-06-04T06:56:08.303800Z"
    },
    "papermill": {
     "duration": 0.261493,
     "end_time": "2024-06-04T06:56:08.307678",
     "exception": false,
     "start_time": "2024-06-04T06:56:08.046185",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.Region.value_counts().nlargest(40).plot(kind='bar', figsize=(10,5))\n",
    "plt.title(\"Count of Region\")\n",
    "plt.ylabel('Count of Region')\n",
    "plt.xlabel('Region');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "bc4cdc2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:08.332713Z",
     "iopub.status.busy": "2024-06-04T06:56:08.332290Z",
     "iopub.status.idle": "2024-06-04T06:56:08.904868Z",
     "shell.execute_reply": "2024-06-04T06:56:08.903670Z"
    },
    "papermill": {
     "duration": 0.587926,
     "end_time": "2024-06-04T06:56:08.907188",
     "exception": false,
     "start_time": "2024-06-04T06:56:08.319262",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Channel</th>\n",
       "      <th>Region</th>\n",
       "      <th>Fresh</th>\n",
       "      <th>Milk</th>\n",
       "      <th>Grocery</th>\n",
       "      <th>Frozen</th>\n",
       "      <th>Detergents_Paper</th>\n",
       "      <th>Delicassen</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Channel</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.062028</td>\n",
       "      <td>-0.169172</td>\n",
       "      <td>0.460720</td>\n",
       "      <td>0.608792</td>\n",
       "      <td>-0.202046</td>\n",
       "      <td>0.636026</td>\n",
       "      <td>0.056011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>0.062028</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.055287</td>\n",
       "      <td>0.032288</td>\n",
       "      <td>0.007696</td>\n",
       "      <td>-0.021044</td>\n",
       "      <td>-0.001483</td>\n",
       "      <td>0.045212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fresh</th>\n",
       "      <td>-0.169172</td>\n",
       "      <td>0.055287</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.100510</td>\n",
       "      <td>-0.011854</td>\n",
       "      <td>0.345881</td>\n",
       "      <td>-0.101953</td>\n",
       "      <td>0.244690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Milk</th>\n",
       "      <td>0.460720</td>\n",
       "      <td>0.032288</td>\n",
       "      <td>0.100510</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.728335</td>\n",
       "      <td>0.123994</td>\n",
       "      <td>0.661816</td>\n",
       "      <td>0.406368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Grocery</th>\n",
       "      <td>0.608792</td>\n",
       "      <td>0.007696</td>\n",
       "      <td>-0.011854</td>\n",
       "      <td>0.728335</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.040193</td>\n",
       "      <td>0.924641</td>\n",
       "      <td>0.205497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Frozen</th>\n",
       "      <td>-0.202046</td>\n",
       "      <td>-0.021044</td>\n",
       "      <td>0.345881</td>\n",
       "      <td>0.123994</td>\n",
       "      <td>-0.040193</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.131525</td>\n",
       "      <td>0.390947</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Detergents_Paper</th>\n",
       "      <td>0.636026</td>\n",
       "      <td>-0.001483</td>\n",
       "      <td>-0.101953</td>\n",
       "      <td>0.661816</td>\n",
       "      <td>0.924641</td>\n",
       "      <td>-0.131525</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.069291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Delicassen</th>\n",
       "      <td>0.056011</td>\n",
       "      <td>0.045212</td>\n",
       "      <td>0.244690</td>\n",
       "      <td>0.406368</td>\n",
       "      <td>0.205497</td>\n",
       "      <td>0.390947</td>\n",
       "      <td>0.069291</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Channel    Region     Fresh      Milk   Grocery    Frozen  \\\n",
       "Channel           1.000000  0.062028 -0.169172  0.460720  0.608792 -0.202046   \n",
       "Region            0.062028  1.000000  0.055287  0.032288  0.007696 -0.021044   \n",
       "Fresh            -0.169172  0.055287  1.000000  0.100510 -0.011854  0.345881   \n",
       "Milk              0.460720  0.032288  0.100510  1.000000  0.728335  0.123994   \n",
       "Grocery           0.608792  0.007696 -0.011854  0.728335  1.000000 -0.040193   \n",
       "Frozen           -0.202046 -0.021044  0.345881  0.123994 -0.040193  1.000000   \n",
       "Detergents_Paper  0.636026 -0.001483 -0.101953  0.661816  0.924641 -0.131525   \n",
       "Delicassen        0.056011  0.045212  0.244690  0.406368  0.205497  0.390947   \n",
       "\n",
       "                  Detergents_Paper  Delicassen  \n",
       "Channel                   0.636026    0.056011  \n",
       "Region                   -0.001483    0.045212  \n",
       "Fresh                    -0.101953    0.244690  \n",
       "Milk                      0.661816    0.406368  \n",
       "Grocery                   0.924641    0.205497  \n",
       "Frozen                   -0.131525    0.390947  \n",
       "Detergents_Paper          1.000000    0.069291  \n",
       "Delicassen                0.069291    1.000000  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "c= df.corr()\n",
    "sns.heatmap(c,cmap=\"BrBG\",annot=True)\n",
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "972eeb00",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:08.935296Z",
     "iopub.status.busy": "2024-06-04T06:56:08.934880Z",
     "iopub.status.idle": "2024-06-04T06:56:08.943862Z",
     "shell.execute_reply": "2024-06-04T06:56:08.942629Z"
    },
    "papermill": {
     "duration": 0.025581,
     "end_time": "2024-06-04T06:56:08.945894",
     "exception": false,
     "start_time": "2024-06-04T06:56:08.920313",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Channel\n",
       "1    298\n",
       "2    142\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Channel'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "af611d5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:08.975138Z",
     "iopub.status.busy": "2024-06-04T06:56:08.974709Z",
     "iopub.status.idle": "2024-06-04T06:56:08.983510Z",
     "shell.execute_reply": "2024-06-04T06:56:08.982439Z"
    },
    "papermill": {
     "duration": 0.026744,
     "end_time": "2024-06-04T06:56:08.985794",
     "exception": false,
     "start_time": "2024-06-04T06:56:08.959050",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Region\n",
       "3    316\n",
       "1     77\n",
       "2     47\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Region'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ca66d6ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.014709Z",
     "iopub.status.busy": "2024-06-04T06:56:09.014240Z",
     "iopub.status.idle": "2024-06-04T06:56:09.023852Z",
     "shell.execute_reply": "2024-06-04T06:56:09.022743Z"
    },
    "papermill": {
     "duration": 0.027293,
     "end_time": "2024-06-04T06:56:09.026508",
     "exception": false,
     "start_time": "2024-06-04T06:56:08.999215",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Milk\n",
       "3045     2\n",
       "1610     2\n",
       "5139     2\n",
       "2428     2\n",
       "3587     2\n",
       "        ..\n",
       "1596     1\n",
       "7152     1\n",
       "13252    1\n",
       "4280     1\n",
       "1698     1\n",
       "Name: count, Length: 421, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Milk'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "bf9f9a74",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.055690Z",
     "iopub.status.busy": "2024-06-04T06:56:09.055244Z",
     "iopub.status.idle": "2024-06-04T06:56:09.061794Z",
     "shell.execute_reply": "2024-06-04T06:56:09.060613Z"
    },
    "papermill": {
     "duration": 0.024234,
     "end_time": "2024-06-04T06:56:09.064414",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.040180",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = df.drop(['Channel'], axis = 1)\n",
    "y = df['Channel']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "379dcea4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.093666Z",
     "iopub.status.busy": "2024-06-04T06:56:09.092674Z",
     "iopub.status.idle": "2024-06-04T06:56:09.101640Z",
     "shell.execute_reply": "2024-06-04T06:56:09.100476Z"
    },
    "papermill": {
     "duration": 0.026125,
     "end_time": "2024-06-04T06:56:09.104074",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.077949",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "28e550ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.133141Z",
     "iopub.status.busy": "2024-06-04T06:56:09.132755Z",
     "iopub.status.idle": "2024-06-04T06:56:09.140438Z",
     "shell.execute_reply": "2024-06-04T06:56:09.138987Z"
    },
    "papermill": {
     "duration": 0.025207,
     "end_time": "2024-06-04T06:56:09.142786",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.117579",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((294, 7), (146, 7))"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape, X_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "fdc9f8c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.171578Z",
     "iopub.status.busy": "2024-06-04T06:56:09.171172Z",
     "iopub.status.idle": "2024-06-04T06:56:09.179455Z",
     "shell.execute_reply": "2024-06-04T06:56:09.178369Z"
    },
    "papermill": {
     "duration": 0.025552,
     "end_time": "2024-06-04T06:56:09.181928",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.156376",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Region              int64\n",
       "Fresh               int64\n",
       "Milk                int64\n",
       "Grocery             int64\n",
       "Frozen              int64\n",
       "Detergents_Paper    int64\n",
       "Delicassen          int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ae82bbf0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.211690Z",
     "iopub.status.busy": "2024-06-04T06:56:09.210565Z",
     "iopub.status.idle": "2024-06-04T06:56:09.222707Z",
     "shell.execute_reply": "2024-06-04T06:56:09.221659Z"
    },
    "papermill": {
     "duration": 0.029225,
     "end_time": "2024-06-04T06:56:09.224969",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.195744",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Region</th>\n",
       "      <th>Fresh</th>\n",
       "      <th>Milk</th>\n",
       "      <th>Grocery</th>\n",
       "      <th>Frozen</th>\n",
       "      <th>Detergents_Paper</th>\n",
       "      <th>Delicassen</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>3</td>\n",
       "      <td>1406</td>\n",
       "      <td>16729</td>\n",
       "      <td>28986</td>\n",
       "      <td>673</td>\n",
       "      <td>836</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>388</th>\n",
       "      <td>3</td>\n",
       "      <td>9785</td>\n",
       "      <td>848</td>\n",
       "      <td>1172</td>\n",
       "      <td>1677</td>\n",
       "      <td>200</td>\n",
       "      <td>406</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>3</td>\n",
       "      <td>22039</td>\n",
       "      <td>8384</td>\n",
       "      <td>34792</td>\n",
       "      <td>42</td>\n",
       "      <td>12591</td>\n",
       "      <td>4430</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>1</td>\n",
       "      <td>583</td>\n",
       "      <td>685</td>\n",
       "      <td>2216</td>\n",
       "      <td>469</td>\n",
       "      <td>954</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>3</td>\n",
       "      <td>15615</td>\n",
       "      <td>12653</td>\n",
       "      <td>19858</td>\n",
       "      <td>4425</td>\n",
       "      <td>7108</td>\n",
       "      <td>2379</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Region  Fresh   Milk  Grocery  Frozen  Detergents_Paper  Delicassen\n",
       "109       3   1406  16729    28986     673               836           3\n",
       "388       3   9785    848     1172    1677               200         406\n",
       "145       3  22039   8384    34792      42             12591        4430\n",
       "203       1    583    685     2216     469               954          18\n",
       "165       3  15615  12653    19858    4425              7108        2379"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b455586f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.314781Z",
     "iopub.status.busy": "2024-06-04T06:56:09.313470Z",
     "iopub.status.idle": "2024-06-04T06:56:09.505698Z",
     "shell.execute_reply": "2024-06-04T06:56:09.504405Z"
    },
    "papermill": {
     "duration": 0.210289,
     "end_time": "2024-06-04T06:56:09.508479",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.298190",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f8ad6d13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.538770Z",
     "iopub.status.busy": "2024-06-04T06:56:09.538322Z",
     "iopub.status.idle": "2024-06-04T06:56:09.543499Z",
     "shell.execute_reply": "2024-06-04T06:56:09.542388Z"
    },
    "papermill": {
     "duration": 0.022987,
     "end_time": "2024-06-04T06:56:09.545811",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.522824",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# instantiate the DecisionTreeClassifier model with criterion entropy\n",
    "\n",
    "clf_en = DecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=0)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "40da3b55",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.575628Z",
     "iopub.status.busy": "2024-06-04T06:56:09.575200Z",
     "iopub.status.idle": "2024-06-04T06:56:09.591200Z",
     "shell.execute_reply": "2024-06-04T06:56:09.589816Z"
    },
    "papermill": {
     "duration": 0.033852,
     "end_time": "2024-06-04T06:56:09.593856",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.560004",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, max_depth=3, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, max_depth=3, random_state=0)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=0)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# fit the model\n",
    "clf_en.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b71d581a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.624980Z",
     "iopub.status.busy": "2024-06-04T06:56:09.624543Z",
     "iopub.status.idle": "2024-06-04T06:56:09.631771Z",
     "shell.execute_reply": "2024-06-04T06:56:09.630503Z"
    },
    "papermill": {
     "duration": 0.025823,
     "end_time": "2024-06-04T06:56:09.634141",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.608318",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_pred_en = clf_en.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "25ceb742",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.664620Z",
     "iopub.status.busy": "2024-06-04T06:56:09.664220Z",
     "iopub.status.idle": "2024-06-04T06:56:09.672246Z",
     "shell.execute_reply": "2024-06-04T06:56:09.671005Z"
    },
    "papermill": {
     "duration": 0.026405,
     "end_time": "2024-06-04T06:56:09.674894",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.648489",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy score with criterion entropy: 0.9110\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "print('Accuracy score with criterion entropy: {0:0.4f}'. format(accuracy_score(y_test, y_pred_en)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1c79a8cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:09.706641Z",
     "iopub.status.busy": "2024-06-04T06:56:09.706238Z",
     "iopub.status.idle": "2024-06-04T06:56:10.342007Z",
     "shell.execute_reply": "2024-06-04T06:56:10.340786Z"
    },
    "papermill": {
     "duration": 0.654072,
     "end_time": "2024-06-04T06:56:10.344474",
     "exception": false,
     "start_time": "2024-06-04T06:56:09.690402",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 0.875, 'x[5] <= 1746.5\\nentropy = 0.925\\nsamples = 294\\nvalue = [194, 100]'),\n",
       " Text(0.2, 0.625, 'x[3] <= 2725.0\\nentropy = 0.208\\nsamples = 183\\nvalue = [177, 6]'),\n",
       " Text(0.1, 0.375, 'entropy = 0.0\\nsamples = 96\\nvalue = [96, 0]'),\n",
       " Text(0.3, 0.375, 'x[3] <= 2783.5\\nentropy = 0.362\\nsamples = 87\\nvalue = [81, 6]'),\n",
       " Text(0.2, 0.125, 'entropy = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(0.4, 0.125, 'entropy = 0.32\\nsamples = 86\\nvalue = [81, 5]'),\n",
       " Text(0.8, 0.625, 'x[5] <= 6931.5\\nentropy = 0.618\\nsamples = 111\\nvalue = [17, 94]'),\n",
       " Text(0.7, 0.375, 'x[2] <= 3642.5\\nentropy = 0.789\\nsamples = 72\\nvalue = [17, 55]'),\n",
       " Text(0.6, 0.125, 'entropy = 0.985\\nsamples = 14\\nvalue = [8, 6]'),\n",
       " Text(0.8, 0.125, 'entropy = 0.623\\nsamples = 58\\nvalue = [9, 49]'),\n",
       " Text(0.9, 0.375, 'entropy = 0.0\\nsamples = 39\\nvalue = [0, 39]')]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,8))\n",
    "\n",
    "from sklearn import tree\n",
    "\n",
    "tree.plot_tree(clf_en.fit(X_train, y_train)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a5178658",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.380420Z",
     "iopub.status.busy": "2024-06-04T06:56:10.379955Z",
     "iopub.status.idle": "2024-06-04T06:56:10.390557Z",
     "shell.execute_reply": "2024-06-04T06:56:10.389166Z"
    },
    "papermill": {
     "duration": 0.032357,
     "end_time": "2024-06-04T06:56:10.393144",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.360787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1,\n",
       "       1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2,\n",
       "       1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1,\n",
       "       1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2,\n",
       "       1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1,\n",
       "       1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2,\n",
       "       1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1,\n",
       "       1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1,\n",
       "       2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1,\n",
       "       1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1,\n",
       "       1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n",
       "       2, 2, 1, 2, 1, 1, 1, 2])"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred_train_en = clf_en.predict(X_train)\n",
    "\n",
    "y_pred_train_en"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "25e00e8a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.428034Z",
     "iopub.status.busy": "2024-06-04T06:56:10.427560Z",
     "iopub.status.idle": "2024-06-04T06:56:10.435553Z",
     "shell.execute_reply": "2024-06-04T06:56:10.434434Z"
    },
    "papermill": {
     "duration": 0.028284,
     "end_time": "2024-06-04T06:56:10.438094",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.409810",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training-set accuracy score: 0.9320\n"
     ]
    }
   ],
   "source": [
    "print('Training-set accuracy score: {0:0.4f}'. format(accuracy_score(y_train, y_pred_train_en)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c81914bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.474077Z",
     "iopub.status.busy": "2024-06-04T06:56:10.472951Z",
     "iopub.status.idle": "2024-06-04T06:56:10.486182Z",
     "shell.execute_reply": "2024-06-04T06:56:10.484922Z"
    },
    "papermill": {
     "duration": 0.034186,
     "end_time": "2024-06-04T06:56:10.488744",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.454558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training set score: 0.9320\n",
      "Test set score: 0.9110\n"
     ]
    }
   ],
   "source": [
    "# print the scores on training and test set\n",
    "\n",
    "print('Training set score: {:.4f}'.format(clf_en.score(X_train, y_train)))\n",
    "\n",
    "print('Test set score: {:.4f}'.format(clf_en.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e3cb93d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.523644Z",
     "iopub.status.busy": "2024-06-04T06:56:10.523228Z",
     "iopub.status.idle": "2024-06-04T06:56:10.535325Z",
     "shell.execute_reply": "2024-06-04T06:56:10.534218Z"
    },
    "papermill": {
     "duration": 0.032425,
     "end_time": "2024-06-04T06:56:10.537775",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.505350",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier(n_neighbors=3)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# import KNeighbors ClaSSifier from sklearn\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "\n",
    "# instantiate the model\n",
    "knn = KNeighborsClassifier(n_neighbors=3)\n",
    "\n",
    "# fit the model to the training set\n",
    "knn.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "e44a8f10",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.574199Z",
     "iopub.status.busy": "2024-06-04T06:56:10.572912Z",
     "iopub.status.idle": "2024-06-04T06:56:10.584330Z",
     "shell.execute_reply": "2024-06-04T06:56:10.583051Z"
    },
    "papermill": {
     "duration": 0.032226,
     "end_time": "2024-06-04T06:56:10.586905",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.554679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier(n_neighbors=3)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# fit the model to the training set\n",
    "knn.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "e4791773",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.623333Z",
     "iopub.status.busy": "2024-06-04T06:56:10.622929Z",
     "iopub.status.idle": "2024-06-04T06:56:10.642180Z",
     "shell.execute_reply": "2024-06-04T06:56:10.640935Z"
    },
    "papermill": {
     "duration": 0.040411,
     "end_time": "2024-06-04T06:56:10.644900",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.604489",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1,\n",
       "       2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1,\n",
       "       2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2,\n",
       "       2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1,\n",
       "       2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1,\n",
       "       1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1,\n",
       "       1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2])"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = knn.predict(X_test)\n",
    "\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "31c5c1eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.682327Z",
     "iopub.status.busy": "2024-06-04T06:56:10.681444Z",
     "iopub.status.idle": "2024-06-04T06:56:10.693847Z",
     "shell.execute_reply": "2024-06-04T06:56:10.692681Z"
    },
    "papermill": {
     "duration": 0.033748,
     "end_time": "2024-06-04T06:56:10.696271",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.662523",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.33333333, 1.        , 0.        , 1.        , 1.        ,\n",
       "       1.        , 1.        , 0.        , 1.        , 1.        ,\n",
       "       1.        , 1.        , 0.33333333, 1.        , 0.33333333,\n",
       "       0.66666667, 0.        , 0.        , 0.66666667, 1.        ,\n",
       "       0.33333333, 1.        , 0.        , 1.        , 0.66666667,\n",
       "       1.        , 0.66666667, 1.        , 0.66666667, 1.        ,\n",
       "       0.        , 0.        , 1.        , 0.66666667, 1.        ,\n",
       "       1.        , 1.        , 0.33333333, 1.        , 1.        ,\n",
       "       0.66666667, 1.        , 1.        , 1.        , 0.        ,\n",
       "       1.        , 1.        , 0.        , 0.        , 1.        ,\n",
       "       0.33333333, 1.        , 1.        , 1.        , 0.33333333,\n",
       "       0.33333333, 0.66666667, 1.        , 0.        , 0.        ,\n",
       "       1.        , 1.        , 0.66666667, 0.33333333, 0.33333333,\n",
       "       0.        , 0.        , 0.        , 1.        , 1.        ,\n",
       "       0.        , 1.        , 1.        , 1.        , 1.        ,\n",
       "       0.66666667, 1.        , 1.        , 0.        , 1.        ,\n",
       "       1.        , 1.        , 1.        , 0.33333333, 0.66666667,\n",
       "       0.        , 1.        , 0.66666667, 0.        , 1.        ,\n",
       "       1.        , 0.66666667, 0.        , 1.        , 0.33333333,\n",
       "       0.33333333, 0.66666667, 1.        , 1.        , 1.        ,\n",
       "       1.        , 1.        , 0.        , 0.        , 0.33333333,\n",
       "       1.        , 0.66666667, 0.        , 1.        , 1.        ,\n",
       "       0.66666667, 1.        , 0.        , 1.        , 0.        ,\n",
       "       1.        , 1.        , 0.        , 1.        , 1.        ,\n",
       "       0.66666667, 0.33333333, 0.33333333, 1.        , 1.        ,\n",
       "       1.        , 0.        , 1.        , 1.        , 0.66666667,\n",
       "       0.        , 0.66666667, 1.        , 1.        , 0.33333333,\n",
       "       1.        , 1.        , 0.        , 1.        , 1.        ,\n",
       "       1.        , 0.66666667, 1.        , 1.        , 0.33333333,\n",
       "       0.        ])"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# probability of getting output as 2 - benign cancer\n",
    "\n",
    "knn.predict_proba(X_test)[:,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "7b2a50d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.732680Z",
     "iopub.status.busy": "2024-06-04T06:56:10.731778Z",
     "iopub.status.idle": "2024-06-04T06:56:10.739815Z",
     "shell.execute_reply": "2024-06-04T06:56:10.738477Z"
    },
    "papermill": {
     "duration": 0.028942,
     "end_time": "2024-06-04T06:56:10.742241",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.713299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy score: 0.8767\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "print('Accuracy score: {0:0.4f}'. format(accuracy_score(y_test, y_pred)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "51b0bd39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.781089Z",
     "iopub.status.busy": "2024-06-04T06:56:10.780686Z",
     "iopub.status.idle": "2024-06-04T06:56:10.804087Z",
     "shell.execute_reply": "2024-06-04T06:56:10.802977Z"
    },
    "papermill": {
     "duration": 0.044742,
     "end_time": "2024-06-04T06:56:10.806673",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.761931",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_pred_train = knn.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a316a166",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.843818Z",
     "iopub.status.busy": "2024-06-04T06:56:10.843414Z",
     "iopub.status.idle": "2024-06-04T06:56:10.850836Z",
     "shell.execute_reply": "2024-06-04T06:56:10.849540Z"
    },
    "papermill": {
     "duration": 0.02842,
     "end_time": "2024-06-04T06:56:10.853090",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.824670",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training-set accuracy score: 0.9388\n"
     ]
    }
   ],
   "source": [
    "print('Training-set accuracy score: {0:0.4f}'. format(accuracy_score(y_train, y_pred_train)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "0b46ad94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.889856Z",
     "iopub.status.busy": "2024-06-04T06:56:10.889441Z",
     "iopub.status.idle": "2024-06-04T06:56:10.930016Z",
     "shell.execute_reply": "2024-06-04T06:56:10.928466Z"
    },
    "papermill": {
     "duration": 0.062368,
     "end_time": "2024-06-04T06:56:10.932950",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.870582",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training set score: 0.9388\n",
      "Test set score: 0.8767\n"
     ]
    }
   ],
   "source": [
    "# print the scores on training and test set\n",
    "\n",
    "print('Training set score: {:.4f}'.format(knn.score(X_train, y_train)))\n",
    "\n",
    "print('Test set score: {:.4f}'.format(knn.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a62260e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:10.970214Z",
     "iopub.status.busy": "2024-06-04T06:56:10.969823Z",
     "iopub.status.idle": "2024-06-04T06:56:10.992901Z",
     "shell.execute_reply": "2024-06-04T06:56:10.991495Z"
    },
    "papermill": {
     "duration": 0.044516,
     "end_time": "2024-06-04T06:56:10.995419",
     "exception": false,
     "start_time": "2024-06-04T06:56:10.950903",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy score with k=5 : 0.8904\n"
     ]
    }
   ],
   "source": [
    "# instantiate the model with k=5\n",
    "knn_5 = KNeighborsClassifier(n_neighbors=5)\n",
    "\n",
    "\n",
    "# fit the model to the training set\n",
    "knn_5.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# predict on the test-set\n",
    "y_pred_5 = knn_5.predict(X_test)\n",
    "\n",
    "\n",
    "print('Accuracy score with k=5 : {0:0.4f}'. format(accuracy_score(y_test, y_pred_5)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "76dde299",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:11.033821Z",
     "iopub.status.busy": "2024-06-04T06:56:11.032604Z",
     "iopub.status.idle": "2024-06-04T06:56:11.055163Z",
     "shell.execute_reply": "2024-06-04T06:56:11.053495Z"
    },
    "papermill": {
     "duration": 0.044485,
     "end_time": "2024-06-04T06:56:11.057672",
     "exception": false,
     "start_time": "2024-06-04T06:56:11.013187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model accuracy score with k=6 : 0.8836\n"
     ]
    }
   ],
   "source": [
    "# instantiate the model with k=6\n",
    "knn_6 = KNeighborsClassifier(n_neighbors=6)\n",
    "\n",
    "\n",
    "# fit the model to the training set\n",
    "knn_6.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# predict on the test-set\n",
    "y_pred_6 = knn_6.predict(X_test)\n",
    "\n",
    "\n",
    "print('Model accuracy score with k=6 : {0:0.4f}'. format(accuracy_score(y_test, y_pred_6)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "d4680ba1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:11.094817Z",
     "iopub.status.busy": "2024-06-04T06:56:11.094315Z",
     "iopub.status.idle": "2024-06-04T06:56:11.115215Z",
     "shell.execute_reply": "2024-06-04T06:56:11.114014Z"
    },
    "papermill": {
     "duration": 0.042359,
     "end_time": "2024-06-04T06:56:11.117650",
     "exception": false,
     "start_time": "2024-06-04T06:56:11.075291",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy score with k=7 : 0.8836\n"
     ]
    }
   ],
   "source": [
    "# instantiate the model with k=7\n",
    "knn_7 = KNeighborsClassifier(n_neighbors=7)\n",
    "\n",
    "\n",
    "# fit the model to the training set\n",
    "knn_7.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# predict on the test-set\n",
    "y_pred_7 = knn_7.predict(X_test)\n",
    "\n",
    "\n",
    "print('Accuracy score with k=7 : {0:0.4f}'. format(accuracy_score(y_test, y_pred_7)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "25236860",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:11.155791Z",
     "iopub.status.busy": "2024-06-04T06:56:11.154769Z",
     "iopub.status.idle": "2024-06-04T06:56:11.175158Z",
     "shell.execute_reply": "2024-06-04T06:56:11.173766Z"
    },
    "papermill": {
     "duration": 0.042134,
     "end_time": "2024-06-04T06:56:11.177648",
     "exception": false,
     "start_time": "2024-06-04T06:56:11.135514",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model accuracy score with k=8 : 0.8904\n"
     ]
    }
   ],
   "source": [
    "# instantiate the model with k=8\n",
    "knn_8 = KNeighborsClassifier(n_neighbors=8)\n",
    "\n",
    "\n",
    "# fit the model to the training set\n",
    "knn_8.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# predict on the test-set\n",
    "y_pred_8 = knn_8.predict(X_test)\n",
    "\n",
    "\n",
    "print('Model accuracy score with k=8 : {0:0.4f}'. format(accuracy_score(y_test, y_pred_8)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7eadc67b",
   "metadata": {
    "papermill": {
     "duration": 0.017548,
     "end_time": "2024-06-04T06:56:11.213097",
     "exception": false,
     "start_time": "2024-06-04T06:56:11.195549",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "c0795a13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:11.250743Z",
     "iopub.status.busy": "2024-06-04T06:56:11.250315Z",
     "iopub.status.idle": "2024-06-04T06:56:11.272567Z",
     "shell.execute_reply": "2024-06-04T06:56:11.271007Z"
    },
    "papermill": {
     "duration": 0.044331,
     "end_time": "2024-06-04T06:56:11.275241",
     "exception": false,
     "start_time": "2024-06-04T06:56:11.230910",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy score with k=9 : 0.8904\n"
     ]
    }
   ],
   "source": [
    "# instantiate the model with k=9\n",
    "knn_9 = KNeighborsClassifier(n_neighbors=9)\n",
    "\n",
    "\n",
    "# fit the model to the training set\n",
    "knn_9.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# predict on the test-set\n",
    "y_pred_9 = knn_9.predict(X_test)\n",
    "\n",
    "\n",
    "print('Accuracy score with k=9 : {0:0.4f}'. format(accuracy_score(y_test, y_pred_9)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f66cf355",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T06:56:11.313100Z",
     "iopub.status.busy": "2024-06-04T06:56:11.312706Z",
     "iopub.status.idle": "2024-06-04T06:56:11.333881Z",
     "shell.execute_reply": "2024-06-04T06:56:11.332524Z"
    },
    "papermill": {
     "duration": 0.043485,
     "end_time": "2024-06-04T06:56:11.336489",
     "exception": false,
     "start_time": "2024-06-04T06:56:11.293004",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model accuracy score with k=9 : 0.8904\n"
     ]
    }
   ],
   "source": [
    "# instantiate the model with k=10\n",
    "knn_10 = KNeighborsClassifier(n_neighbors=10)\n",
    "\n",
    "\n",
    "# fit the model to the training set\n",
    "knn_10.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# predict on the test-set\n",
    "y_pred_10 = knn_10.predict(X_test)\n",
    "\n",
    "\n",
    "print('Model accuracy score with k=9 : {0:0.4f}'. format(accuracy_score(y_test, y_pred_10)))"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5133471,
     "sourceId": 8583458,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30715,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.012879,
   "end_time": "2024-06-04T06:56:12.077837",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-04T06:56:02.064958",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
